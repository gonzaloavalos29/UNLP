@page "/listadoPersonas"
@rendermode InteractiveServer

@inject PersonaListarUseCase ListarPersona
@inject PersonaBajaUseCase PersonaBajaUseCase
@inject NavigationManager Nav
@inject ServicioSesionUsuario Sesion
@inject IServicioAutorizacion Autorizacion

<h3>Listado de Personas</h3>

@if (!Sesion.EstaLogeado)
{
    <p>No estás logueado.</p>
    <NavLink href="/">Iniciar sesión</NavLink>
}
else
{

    <p>Bienvenido, @Sesion.UsuarioActual!.nombre</p>

    @if (personas.Count == 0)
    {
        <p>No hay Personas registrados.</p>
    }

    <DialogoConfirmacion @ref="dialogo" OnConfirmado="EliminarConfirmado" />

    <button class="btn btn-success mb-3"
            @onclick="@(() => Nav.NavigateTo("/editar-persona"))"
            disabled="@(Sesion.UsuarioActual?.id == null || !Autorizacion.PoseeElPermiso(Sesion.UsuarioActual.id, Permiso.PersonaAlta))">
        <span class="bi bi-plus-circle"></span> Nueva Persona
    </button>

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>DNI</th>
                <th>Telefono</th>
                <th>Email</th>
                <th>Acción</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var persona in personas)
            {
                <tr>
                    <td>@persona.Id</td>
                    <td>@persona.Nombre</td>
                    <td>@persona.Apellido</td>
                    <td>@persona.DNI</td>
                    <td>@persona.Telefono</td>
                    <td>@persona.Email</td>
                    <td>
                        <button class="btn btn-primary" @onclick="@(() => EditarPersona(persona))"
                            disabled="@(!Autorizacion.PoseeElPermiso(Sesion.UsuarioActual!.id, Permiso.PersonaModificar))">
                            Editar
                        </button>
                        <button class="btn btn-danger" @onclick="@(() => ConfirmarEliminacion(persona))"
                            disabled="@(!Autorizacion.PoseeElPermiso(Sesion.UsuarioActual.id, Permiso.PersonaBaja))">
                            Eliminar
                        </button>

                        <button class="btn btn-primary" @onclick="@(() => AgregarPersona(persona))"
                            disabled="@(!Autorizacion.PoseeElPermiso(Sesion.UsuarioActual.id, Permiso.PersonaAlta))">
                            Agregar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Persona> personas = new();
    private Persona? personaSeleccionado = null;
    private DialogoConfirmacion? dialogo = null!;

    protected override void OnInitialized()
    {
        RefrescarListado();
    }

    private void RefrescarListado()
    {
        personas = ListarPersona.Ejecutar();
    }

    private void EditarPersona(Persona persona)
    {
        Nav.NavigateTo($"/editar-pesona/{persona.Id}");
    }

    private void ConfirmarEliminacion(Persona persona)
    {
        personaSeleccionado = persona;
        dialogo?.Mostrar($"¿Desea eliminar al Persona {persona.Nombre} {persona.Apellido}?");
    }

    private void AgregarPersona(Persona persona)
    {
        Nav.NavigateTo($"/agregar-pesona/{persona}");
    }
    private void EliminarConfirmado()
    {
        if (personaSeleccionado == null)
            return;

        try
        {
            PersonaBajaUseCase.Ejecutar(personaSeleccionado.Id, Sesion.UsuarioActual!.id);
            RefrescarListado();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al eliminar Persona: {ex.Message}");
        }
    }
}
